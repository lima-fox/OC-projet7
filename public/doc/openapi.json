{
  "openapi": "3.0.0",
  "info": {
    "title": "OC projet 7 API",
    "version": "0.1.9"
  },
  "servers": [
    {
      "url": "http://projet7api.test"
    }
  ],
  "paths": {
    "/products": {
      "get": {
        "summary": "Returns a list of products with limit of 3 items.",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Products"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get a product by Id.",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A Products object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Products"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Returns a list of users with limit of 3 items.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new User.",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "object user created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Id of the created user."
                    }
                  },
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "property_path": {
                        "type": "string",
                        "example": "email"
                      },
                      "message": {
                        "type": "string",
                        "example": "this email already exist."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a user by Id.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A Users object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "404": {
            "description": "user not found."
          }
        }
      },
      "delete": {
        "summary": "Delete a user by Id.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "delete a user by Id."
          },
          "404": {
            "description": "User not found."
          }
        }
      },
      "put": {
        "summary": "Update a user by Id.",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update a user by Id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Products": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 4
          },
          "brand": {
            "type": "string",
            "example": "Samsung"
          },
          "model": {
            "type": "string",
            "example": "S11"
          },
          "release_year": {
            "type": "integer",
            "example": 2021
          },
          "operating_system": {
            "type": "string",
            "example": "android"
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "http://projet7api.test/products/4"
                  }
                }
              },
              "all": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "http://projet7api.test/products"
                  }
                }
              }
            }
          }
        }
      },
      "Users": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 4
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "created_at": {
            "type": "string",
            "example": "2021-04-30 17:06:24"
          },
          "updated_at": {
            "type": "string",
            "example": "2021-04-30 18:06:24"
          },
          "_links": {
            "type": "object",
            "properties": {
              "self": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "http://projet7api.test/users/4"
                  }
                }
              },
              "update": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "http://projet7api.test/users/4"
                  }
                }
              },
              "delete": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "http://projet7api.test/users/4"
                  }
                }
              },
              "all": {
                "type": "object",
                "properties": {
                  "href": {
                    "type": "string",
                    "example": "http://projet7api.test/users"
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "oAuthNoScopes": {
        "type": "oauth2",
        "description": "This API uses OAuth 2 with the client credentials.",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "http://projet7api.test/token",
            "scopes": {}
          }
        }
      }
    }
  },
  "security": [
    {
      "oAuthNoScopes": []
    }
  ]
}